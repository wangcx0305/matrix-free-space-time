This folder contains following functions and data:

data128.m

The is MATLAB code to generate simulation data located in 128 * 128 array and time = 10 with real value of four parameters lamda_0 = 1, lambda_1 = 1, lambda_2 = 0.01 and lambda_3 = 1. The missing proportion we use is 20%.

mdata128_new.csv

It contains the data generated by data128.m.

smres.csv

It contains the soil moisture data after standardization.

fftwdct2.c
 
c files for two dimensional discrete cosine transformation.

fftwidct2.c

c files for two dimensional inverse discrete cosine transformation.

mydct2.m

MATLAB function that computes two dimensional discrete cosine transformation using fftwdct2.c.

myidct2.m

MATLAB function that computes two dimensional discrete cosine transformation using fftwidct2.c.

mgradfun3part1.m

This is a MATLAB function that computes the gradient of the REML log-likelihood when t = 1 using Lanczos algorithm, Hutchinson trace estimates for fixed lambda_1, lambda_2 and lambda_3.

mgradfun4par.m

This is a MATLAB function that computes the gradient of the REML log-likelihood for the whole dataset using Lanczos algorithm, Hutchinson trace estimates for fixed lambda_0, lambda_1, lambda_2 and lambda_3.

msimulation3par1.m

The MATLAB function uses function in mgradfun3part1.m to estimate lambda_1, lambda_2 and lambda_3 when t = 1 using trust region method for simulation study.


msimulation10.m

The MATLAB function uses function in mgradfun4par.m to estimate all the parameters using trust region method for simulation study.

smresall.m

The MATLAB function uses function in mgradfun4par.m to estimate all the parameters using trust region method for original standardized soil moisture data.

in4smresall.m

The MATLAB function uses function in mgradfun4par.m to estimate all the parameters using trust region method for standardized soil moisture data after 4 * 4 splitting.

Px.m

This is a MATALB function that computes multi-2-dimensional discrete cosine transformation.

iPx.m

This is a MATALB function that computes multi-2-dimensional inverse discrete cosine transformation.


Ax_4.m

This is a MATLAB function that computes X’QXz using Px.m, where z is a vector.

Dx_4.m

This is a MATLAB function that computes Dz, where z is a vector.

pDplx.m

This is a MATLAB function that computes (∂D/∂lambda)z, where z is a vector and lambda could be lambda_w or lambda_0.


